name: Build Immortalwrt

on:
  push:
    branches:
      - 'master'
  schedule:
  - cron: '0 */12 * * *'

jobs:
  build:
    name: Build ${{ matrix.target }}-${{ matrix.version }}
    runs-on: self-hosted
    strategy:
      fail-fast: false
      matrix:
        version: [23.05.0-rc4]
        target: [xiaomi_ax3600, xiaomi_ax3600-stock, friendlyarm_nanopi-r5c]
        include:
          - target: xiaomi_ax3600
            vendor: qualcommax
            arch: ipq807x
            env_file: ax3600.env
            conf_dir: qualcommax
          - target: xiaomi_ax3600-stock
            vendor: qualcommax
            arch: ipq807x
            env_file: ax3600-stock.env
            conf_dir: qualcommax
          - target: friendlyarm_nanopi-r5c
            vendor: rockchip
            arch: armv8
            env_file: r5c.env
            conf_dir: rockchip

    steps:
      - name: Checkout source tree
        uses: actions/checkout@v3

      - name: Install deps
        run: |
          sudo apt update
          sudo apt install build-essential clang flex bison g++ gawk gcc-multilib g++-multilib gettext git libncurses-dev libssl-dev python3-distutils rsync unzip zlib1g-dev file wget qemu-utils genisoimage

      - name: Load env file
        run: |
          cat ${{ matrix.conf_dir }}/${{ matrix.env_file }} >> $GITHUB_ENV

      - name: Build images
        run: |
          echo ${{ env.PROFILE }}
          echo ${{ env.PACKAGES }}
          echo ${{ env.FILES }}
          sf=""
          pf=${{ matrix.vendor }}-${{ matrix.arch }}
          vendor=${{ matrix.vendor }}
          arch=${{ matrix.arch }}
          if [ ${{ matrix.version }} != "snapshots" ]; then
            if [ "${vendor}" == "qualcommax" ]; then
              vendor="ipq807x"
              arch="generic"
            fi
            pf=${{ matrix.version }}-${vendor}-${arch}
            sf="releases/${sf}"
          fi
          wget https://downloads.immortalwrt.org/${sf}${{ matrix.version }}/targets/${vendor}/${arch}/immortalwrt-imagebuilder-${pf}.Linux-x86_64.tar.xz -O ib.tar.xz
          mkdir ib
          tar xf ib.tar.xz --strip-components=1 -C ib
          cp -a ${{matrix.conf_dir}}/files ib/
          cd ib
          sed -e 's,https://downloads.immortalwrt.org,https://mirrors.shanghaitech.edu.cn/immortalwrt,g' -i.bak repositories.conf
          cd packages && curl -s https://api.github.com/repos/douglarek/luci-app-homeproxy/releases/latest | grep browser_download_url | cut -d : -f 2,3 | tr -d \" | wget -qi - && cd -
          make image PROFILE=${{ env.PROFILE }} PACKAGES=${{ env.PACKAGES }} FILES=${{ env.FILES }}
          cd -

      - name: Publishing to GitHub Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.target }}-${{ matrix.version }}
          path: |
            ib/bin/targets/*/*/*
